{
  "name": "remirror-monorepo",
  "private": true,
  "homepage": "https://remirror.io",
  "repository": "https://github.com/remirror/remirror",
  "type": "module",
  "scripts": {
    "browser:coverage": "browserslist --coverage",
    "build": "run-p build:core css:copy",
    "build:core": "preconstruct build",
    "build:custom": "pnpm recursive run build:custom",
    "build:dev": "preconstruct dev",
    "build:docs": "run-s docs:sidebar docs:prod docs:redirects",
    "build:storybook": "manypkg run support/storybook build:storybook",
    "build:svelte": "manypkg run packages/@remirror/svelte build",
    "cdk": "cdk",
    "changeset": "changeset",
    "check:pnpm": "node support/scripts/check-pnpm.mjs",
    "checks": "run-s lint typecheck test",
    "checks:ci": "run-s lint typecheck",
    "checks:disable": "rimraf ./.config.json",
    "checks:enable": "cpy support/.config.sample.json ./ --rename=\".config.json\"",
    "checks:fix": "run-s -c fix typecheck test",
    "checks:release": "run-s checks build test:e2e",
    "clean": "pnpm if-clean git clean -- -fdx --exclude=.config.json --exclude=node_modules --exclude=**/node_modules",
    "clean:all": "git clean -fdX --exclude='.config.json'",
    "clean:modules": "git clean -fdX packages support",
    "clean:tsconfig": "rimraf packages/**/tsconfig.json",
    "create:package": "node packages/@remirror/cli/bin.js create",
    "css:copy": "cpy packages/@remirror/styles/*.css packages/remirror/styles/",
    "css:force": "pnpm ts support/scripts/check-styles.js --force",
    "dev": "preconstruct watch",
    "docs": "pnpm run docs:dev",
    "docs:dev": "cd support/website && pnpm start",
    "docs:prod": "cd support/website && pnpm build",
    "docs:redirects": "cpy ./support/website/_redirects ./support/website/build/_redirects",
    "docs:sidebar": "pnpm ts support/scripts/create-typedoc-sidebars.ts",
    "fix": "run-s -c fix:\\*",
    "fix:build": "preconstruct fix",
    "fix:css": "pnpm ts support/scripts/check-styles.ts -- --fix",
    "fix:es": "pnpm lint:es -- --fix",
    "fix:exports": "pnpm ts support/scripts/generate-configs.ts -- --exports",
    "fix:md": "pnpm lint:md -- --fix",
    "fix:prettier": "pnpm run:prettier -- --write",
    "fix:repo": "manypkg fix",
    "generate:config": "pnpm ts support/scripts/generate-configs.ts",
    "generate:exports": "pnpm run fix:exports -- --force",
    "generate:icons": "pnpm ts support/scripts/generate-icons.ts",
    "generate:intl": "pnpm ts support/scripts/generate-intl.ts",
    "generate:playground": "pnpm ts -- ./support/scripts/generate-playground.ts",
    "generate:size": "pnpm ts support/scripts/generate-configs.ts -- --size",
    "generate:ts": "pnpm ts support/scripts/generate-configs.ts -- --ts-packages",
    "if-clean": "pnpm ts support/scripts/run-if-clean.ts",
    "if-config": "pnpm ts support/scripts/run-if-config.ts",
    "if-not-ci": "pnpm ts support/scripts/run-if-not-ci.ts",
    "if-publishable": "pnpm ts support/scripts/run-if-publishable.ts",
    "preinstall": "pnpm symlink:root && pnpm check:pnpm",
    "postinstall": "run-p build:dev css:copy",
    "intl": "run-s intl:extract intl:compile intl:build",
    "intl:build": "pnpm generate:intl",
    "intl:compile": "lingui compile",
    "intl:extract": "lingui extract",
    "is-logged-in": "npm whoami",
    "lint": "run-s lint:\\*",
    "lint:build": "preconstruct validate",
    "lint:css": "pnpm ts support/scripts/check-styles.ts",
    "lint:es": "FULL_ESLINT_CHECK=true eslint -f codeframe --ext=.tsx,.ts,.js .",
    "lint:exports": "pnpm run fix:exports -- --check",
    "lint:md": "eslint -f codeframe  --ignore-pattern='*.js' --ignore-pattern='*.ts' --ignore-pattern='*.tsx' .",
    "lint:prettier": "pnpm run:prettier -- --check",
    "lint:repo": "manypkg check",
    "refresh": "pnpm clean:all; pnpm symlink:root; pnpm install;",
    "prerelease": "pnpm if-not-ci run-s checks:release",
    "release": "pnpm if-publishable run-s release",
    "release:latest": "pnpm publish -r",
    "release:next": "pnpm publish -r --tag next",
    "reset": "pnpm clean:all; rm pnpm-lock.yaml; pnpm symlink:root; pnpm install;",
    "run:prettier": "prettier --loglevel warn --ignore-path .eslintignore \"**/*.{js,jsx,ts,tsx,md,mdx,json,html,css,yml,yaml,graphql}\"",
    "size": "size-limit",
    "storybook": "manypkg run support/storybook storybook",
    "symlink:root": "node support/scripts/symlink-root.mjs",
    "test": "jest --verbose",
    "test:build": "TEST_BUILD=true jest --verbose --coverage=false",
    "test:e2e": "manypkg run support/e2e chromium",
    "test:watch": "jest  --watch --verbose=false --coverage=false",
    "ts": "node -r ./support/scripts/babel-register.js",
    "typecheck": "tsc -b ./tsconfig.references.json",
    "update:deps": "pnpm update --latest --recursive -i",
    "update:workspace": "pnpm up -r --workspace \"@remirror/*\" remirror multishift jest-remirror jest-prosemirror prosemirror-suggest a11y-status test-keyboard",
    "preversion:changeset": "pnpm ts support/scripts/changeset-forced-update.ts",
    "version:changeset": "changeset version",
    "postversion:changeset": "pnpm ts support/scripts/changeset-forced-update.ts --clean",
    "version:ci": "run-s version:changeset version:date version:repo fix:prettier version:install",
    "version:date": "pnpm ts support/scripts/changelog-dates.ts",
    "version:install": "CI= pnpm install --frozen-lockfile=false",
    "version:pr": "pnpm ts support/scripts/enable-pr-changeset.ts",
    "version:repo": "CI= run-s fix:repo update:workspace"
  },
  "browserslist": [
    "since 2017"
  ],
  "dependencies": {
    "@babel/core": "^7.12.9",
    "@babel/parser": "^7.12.7",
    "@babel/plugin-proposal-class-properties": "^7.12.1",
    "@babel/plugin-proposal-decorators": "^7.12.1",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.12.1",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.12.1",
    "@babel/plugin-proposal-numeric-separator": "^7.12.7",
    "@babel/plugin-proposal-object-rest-spread": "^7.12.1",
    "@babel/plugin-proposal-optional-chaining": "^7.12.7",
    "@babel/plugin-proposal-private-methods": "^7.12.1",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-transform-runtime": "^7.12.1",
    "@babel/plugin-transform-template-literals": "^7.12.1",
    "@babel/plugin-transform-typescript": "^7.12.1",
    "@babel/preset-env": "^7.12.7",
    "@babel/preset-react": "^7.12.7",
    "@babel/register": "^7.12.1",
    "@babel/runtime": "^7.12.5",
    "@changesets/changelog-github": "^0.2.7",
    "@changesets/cli": "^2.12.0",
    "@jest/types": "^26.6.2",
    "@linaria/babel": "^3.0.0-beta.0",
    "@linaria/cli": "^3.0.0-beta.1",
    "@linaria/shaker": "^3.0.0-beta.1",
    "@lingui/cli": "^3.3.0",
    "@lingui/macro": "^3.3.0",
    "@lingui/react": "^3.3.0",
    "@manypkg/cli": "^0.16.1",
    "@manypkg/get-packages": "^1.1.1",
    "@preconstruct/cli": "^2.0.1",
    "@remirror/testing": "^0.0.4",
    "@size-limit/preset-big-lib": "^4.9.1",
    "@testing-library/dom": "^7.28.1",
    "@testing-library/jest-dom": "^5.11.6",
    "@testing-library/react-hooks": "^3.7.0",
    "@testing-library/user-event": "^12.5.0",
    "@types/codegen.macro": "^3.0.0",
    "@types/eslint": "^7.2.6",
    "@types/jest": "^26.0.17",
    "@types/jest-axe": "^3.5.1",
    "@types/ms.macro": "^2.0.0",
    "@types/node": "^14.14.11",
    "@types/requestidlecallback": "^0.3.1",
    "@types/testing-library__jest-dom": "^5.9.5",
    "@types/testing-library__react-hooks": "^3.4.1",
    "@typescript-eslint/eslint-plugin": "^4.9.1",
    "@typescript-eslint/parser": "^4.9.1",
    "aws-cdk": "^1.77.0",
    "babel-jest": "^26.6.3",
    "babel-plugin-annotate-pure-calls": "^0.4.0",
    "babel-plugin-dev-expression": "^0.2.2",
    "babel-plugin-macros": "^3.0.0",
    "babel-plugin-template-html-minifier": "^4.1.0",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "case-anything": "^1.1.2",
    "codegen.macro": "^4.0.0",
    "core-js": "^3.8.1",
    "cpy-cli": "^3.1.1",
    "cross-env": "^7.0.3",
    "downlevel-dts": "^0.7.0",
    "eslint": "^7.15.0",
    "eslint-config-prettier": "^7.0.0",
    "eslint-formatter-github": "^1.0.11",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-graphql": "^4.0.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jest": "^24.1.3",
    "eslint-plugin-jest-formatting": "^2.0.0",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-lit": "^1.2.4",
    "eslint-plugin-lit-a11y": "^1.0.1",
    "eslint-plugin-markdown": "^2.0.0-rc.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.21.5",
    "eslint-plugin-react-hooks": "^4.2.0",
    "eslint-plugin-react-native": "^3.10.0",
    "eslint-plugin-simple-import-sort": "^6.0.1",
    "eslint-plugin-sonarjs": "^0.5.0",
    "eslint-plugin-unicorn": "^23.0.0",
    "esm": "^3.2.25",
    "husky": "^4.3.5",
    "if-env": "^1.0.4",
    "jest": "^26.6.3",
    "jest-circus": "^26.6.3",
    "jest-extended": "^0.11.5",
    "jest-github-reporter": "^1.0.1",
    "jest-prosemirror": "1.0.0-next.56",
    "jest-remirror": "1.0.0-next.56",
    "jest-watch-typeahead": "^0.6.1",
    "json.macro": "^1.3.0",
    "linaria": "npm:@linaria/core@^3.0.0-beta.0",
    "lint-staged": "^10.5.3",
    "ms.macro": "^2.0.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.2.1",
    "prettier-plugin-packagejson": "^2.2.8",
    "remirror": "1.0.0-next.56",
    "rimraf": "^3.0.2",
    "size-limit": "^4.9.1",
    "snapshot-diff": "^0.8.1",
    "typescript": "^4.1.2",
    "typescript-plugin-css-modules": "^3.0.1",
    "typescript-snapshots-plugin": "^1.7.0",
    "typescript-styled-plugin": "^0.15.0"
  },
  "engines": {
    "node": ">=14",
    "pnpm": "^5.13.0"
  },
  "manypkg": {
    "defaultBranch": "HEAD"
  },
  "pnpm": {
    "overrides": {
      "@babel/preset-env": "^7.12.0",
      "bl": ">=4.0.3",
      "monaco-editor": "npm:@typescript-deploys/monaco-editor@4.1.2",
      "react": "^17.0.1",
      "serialize-javascript": "^4.0.0",
      "type-fest": "^0.19.0",
      "typescript": "^4.1.2"
    }
  },
  "preconstruct": {
    "packages": [
      "packages/*",
      "packages/@remirror/*",
      "!packages/@remirror/svelte",
      "backend/cdk"
    ]
  }
}
