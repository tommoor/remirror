name: ci

on:
  schedule:
    - cron: '0 0 * * *'

  push:
    branches:
      - main
      - next

  pull_request:
    branches:
      - main
      - next

env:
  PNPM_CACHE_FOLDER: .pnpm-store

jobs:
  # Lint the project
  lint:
    timeout-minutes: 8
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: check build
        run: pnpm lint:build

      - name: check css
        run: pnpm lint:css

      - name: check TS / JS files
        run: pnpm lint:es -- -f github

      - name: check markdown code blocks
        run: pnpm lint:md -- -f github

      - name: check formatting
        run: pnpm lint:prettier

      - name: check repo and versions
        run: pnpm lint:repo

  # Typecheck the project
  typecheck:
    timeout-minutes: 8
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: typecheck project
        run: pnpm typecheck

  # Unit test and update coverage report
  unit_test:
    timeout-minutes: 8
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: run unit tests
        run: pnpm test

      - name: publish code coverage report
        uses: paambaati/codeclimate-action@v2.4.0
        if: github.ref == 'refs/heads/next' || github.ref == 'refs/heads/main'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: 'echo Coverage'
          debug: false

  # Build the project and run tests on built files.
  build_test:
    timeout-minutes: 8
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x]
      fail-fast: false

    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: build project
        run: pnpm build

      - name: run unit tests
        run: pnpm test:build

  # Check that package sizes are within their boundaries
  size_check:
    timeout-minutes: 8
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: build project
        run: pnpm build

      - name: check sizes
        uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_step: install

  # Run chromium e2e tests with playwright
  chromium_e2e:
    timeout-minutes: 8
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      ## TODO remove this hack once playwright version updated.
      - name: install ffmpeg
        run: sudo apt-get install ffmpeg

      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: build project
        run: pnpm build

      - name: chrome integration test ${{ matrix.os }}
        run: cd support/e2e && pnpm chromium

  # Run firefox e2e tests with playwright
  firefox_e2e:
    timeout-minutes: 8
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: build project
        run: pnpm build

      - name: firefox integration test ${{ matrix.os }}
        run: cd support/e2e && pnpm firefox
